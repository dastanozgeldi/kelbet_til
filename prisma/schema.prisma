generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Program {
  JBBM
  NIS
}

enum Language {
  T1
  T2
}

enum BookStatus {
  ACTIVE
  ARCHIVED
}

enum JournalStatus {
  PUBLISHED
  DRAFT
  ARCHIVED
}

model Book {
  id        String     @id @default(cuid())
  title     String
  fileUrl   String
  grade     String
  language  Language
  term      String
  userId    String?
  createdAt DateTime   @default(now())
  updatedAt DateTime?  @updatedAt
  status    BookStatus @default(ACTIVE)
  program   Program    @default(NIS)
  user      User?      @relation(fields: [userId], references: [id])
}

model Journal {
  id        String        @id @default(cuid())
  title     String
  fileUrl   String
  userId    String?
  createdAt DateTime      @default(now())
  updatedAt DateTime?     @updatedAt
  status    JournalStatus @default(DRAFT)
  user      User?         @relation(fields: [userId], references: [id])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          UserRole  @default(USER)
  accounts      Account[]
  books         Book[]
  journals      Journal[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
